server:
  port: 8080

batch-size: 50 # Bulk Insert Size

spring:
  application:
    name: crawling

  security:
    user:
      name: ${SECURITY_USERNAME}
      password: ${SECURITY_PASSWORD} # Spring Security 초기 유저 정보

  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update # 엔티티로 등록된 클래스와 매핑되는 테이블 자동 생성 주석해도 됩니다.
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        # 자바에서 카멜로 필드 작성하면 DB에 스네이크로 기록
    properties:
      hibernate:
        format_sql: true # SQL 이쁘게 보기
        show_sql: true # SQL 보기
#        format_sql: true # SQL 이쁘게 보기
#        show_sql: true # SQL 보기
        default_batch_fetch_size: ${batch-size}
        order_updates: true
        order_inserts: true
        generate_statistics: false
        jdbc:
          batch_size: ${batch-size}
    open-in-view: false
logging:
  level:
    org.mariadb.jdbc: info

google:
  client:
    username: ${GOOGLE_CLIENT_USERNAME}
    password: ${GOOGLE_CLIENT_PASSWORD}
    redirect-url: ${GOOGLE_CLIENT_REDIRECT_URL}
  oauth:
    api:
      url: ${GOOGLE_OAUTH_API_URL}
  resource:
    api:
      url: ${GOOGLE_RESOURCE_API_URL}
